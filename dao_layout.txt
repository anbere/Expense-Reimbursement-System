Employee
	Login
		- checkCredentials Boolean/Employee
			SELECT username, password statement

	Submit reimbursement request
		- createReimbursementRequest Reimbursement
			INSERT INTO Reimbursement (values)
	View pending requests
		- getPendingReimbursementsByUser ArrayList<Reimbursement>
			SELECT * FROM Reimbursement where username AND pending
	View resolved requests 		
		- getResolvedReimbursementsByUser ArrayList<Reimbursement>
			SELECT * FROM Reimbursement where username AND resolved
	View my account information 
		- getEmployeeByUsername Employee
			SELECT * FROM Employees where username match
	Update account information 
		- updateEmployeeInfo Employee
			UPDATE email, password where username match
			
Manager
	Login
		- checkCredentials(Employee) Boolean/Employee
		
	Approve/Deny pending reimbursement requests
		- getAllPendingReimbursements 
			SELECT * FROM Reimbursement where pending AND not manager
		- updateReimbursementsStatus Reimbursement
			UPDATE
	View all pending requests of all employees
		- getAllPendingReimbursements ArrayList<Reimbursement>
			SELECT * FROM Reimbursement where pending AND not manager
	View all resolved requests of all employees
		- getAllResolvedReimbursements ArrayList<Reimbursement>
			SELECT * FROM Reimbursement where pending AND not manager
	View reimbursement requests of a specific employees
		- getAllReimbursementsByUser ArrayList<Reimbursement>
			SELECT * FROM Reimbursement where username AND not manager
	View all employees
		- getAllEmployees Employee
			SELECT * FROM Employees where not manager






create table employees(
username VARCHAR(16),
password varchar(16),
first_name varchar(30),
last_name varchar(30),
email varchar(100) unique,
role_id integer, -- 0: Employee 1: Manager
primary key(username)
);

INSERT INTO ers.employees VALUES('anbers', 'pass', 'andres', 'rodriguez', 'email@email.com', 0);


create table reimbursement_status(
reimb_status_id integer,
reimb_status varchar(10),
primary key(reimb_status_id)
);

INSERT INTO ers.reimbursement_status VALUES(0, 'PENDING');
INSERT INTO ers.reimbursement_status VALUES(1, 'APPROVED');
INSERT INTO ers.reimbursement_status VALUES(2, 'DENIED');

create table reimbursement_type(
reimb_type_id integer,
reimb_type varchar(10),
primary key(reimb_type_id)
);

INSERT INTO ers.reimbursement_type VALUES(0, 'LODGING');
INSERT INTO ers.reimbursement_type VALUES(1, 'TRAVEL');
INSERT INTO ers.reimbursement_type VALUES(2, 'FOOD');
INSERT INTO ers.reimbursement_type VALUES(3, 'OTHER');


create table reimbursements(
reimb_id integer,
reimb_status_id integer default 0, -- 0: pending, 1: resolved
reimb_author varchar(16),
reimb_type_id integer, -- 0: Lodging, 1: Travel, 2: Food, 3: Other
reimb_amount integer,
reimb_description varchar(250),
primary key(reimb_id),
constraint fk_user_author
	foreign key(reimb_author) references employees(username),
constraint fk_reimb_status
	foreign key(reimb_status_id) references reimbursement_status(reimb_status_id),
constraint fk_reimb_type
	foreign key(reimb_type_id) references reimbursement_type(reimb_type_id)
);




drop schema ers cascade;

create schema ers;

select r.reimb_id, r.reimb_author, r.reimb_amount, rs.reimb_status 
from reimbursements r
join reimbursement_status rs 
on r.reimb_status_id = rs.reimb_status_id 

SELECT r.reimb_id, r.reimb_status_id, rs.reimb_status, r.reimb_author, rt.reimb_type, r.reimb_amount, r.reimb_description 
FROM ers.reimbursements r 
join ers.reimbursement_type rt 
on r.reimb_type_id  = rt.reimb_type_id 
join ers.reimbursement_status rs 
on r.reimb_status_id = rs.reimb_status_id
where r.reimb_status_id = 0
order by r.reimb_author, reimb_id 




insert into ers.reimbursements values(12346, 0, 'anbers', 1, 696969, 'This is a description');
insert into ers.reimbursements values(54321, 0, 'anbers', 1, 696969, 'This is a description');
insert into ers.reimbursements values(12344, 0, 'anbers', 1, 696969, 'This is a description');
insert into ers.reimbursements values(12343, 0, 'anbers', 1, 696969, 'This is a description');
insert into ers.reimbursements values(12342, 0, 'anbers', 1, 696969, 'This is a description');

update ers.reimbursements 
set reimb_status_id = 2
where reimb_id = 12345

truncate ers.reimbursements 

