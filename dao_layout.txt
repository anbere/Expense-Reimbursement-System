Employee
	Login
		- checkCredentials Boolean/Employee
			SELECT username, password statement

	Submit reimbursement request
		- createReimbursementRequest Reimbursement
			INSERT INTO Reimbursement (values)
	View pending requests
		- getPendingReimbursementsByUser ArrayList<Reimbursement>
			SELECT * FROM Reimbursement where username AND pending
	View resolved requests 		
		- getResolvedReimbursementsByUser ArrayList<Reimbursement>
			SELECT * FROM Reimbursement where username AND resolved
	View my account information 
		- getEmployeeByUsername Employee
			SELECT * FROM Employees where username match
	Update account information 
		- updateEmployeeInfo Employee
			UPDATE email, password where username match
			
Manager
	Login
		- checkCredentials(Employee) Boolean/Employee
		
	Approve/Deny pending reimbursement requests
		- getAllPendingReimbursements 
			SELECT * FROM Reimbursement where pending AND not manager
		- updateReimbursementsStatus Reimbursement
			UPDATE
	View all pending requests of all employees
		- getAllPendingReimbursements ArrayList<Reimbursement>
			SELECT * FROM Reimbursement where pending AND not manager
	View all resolved requests of all employees
		- getAllResolvedReimbursements ArrayList<Reimbursement>
			SELECT * FROM Reimbursement where pending AND not manager
	View reimbursement requests of a specific employees
		- getAllReimbursementsByUser ArrayList<Reimbursement>
			SELECT * FROM Reimbursement where username AND not manager
	View all employees
		- getAllEmployees Employee
			SELECT * FROM Employees where not manager






create table employees(
username VARCHAR(16),
password varchar(16),
first_name varchar(30),
last_name varchar(30),
email varchar(100) unique,
role_id integer, -- 0: Employee 1: Manager
primary key(username)
);

create table reimbursement_status(
reimb_status_id integer,
reimb_status varchar(10),
primary key(reimb_status_id)
);

create table reimbursement_type(
reimb_type_id integer,
reimb_type varchar(10),
primary key(reimb_type_id)
);

create table reimbursements(
reimb_id integer,
reimb_status_id integer default 0, -- 0: pending, 1: resolved
reimb_author varchar(16),
reimb_type_id integer, -- 0:...
reimb_amount varchar(12),
reimb_receipt bytea,
primary key(reimb_id),
constraint fk_user_author
	foreign key(reimb_author) references employees(username),
constraint fk_reimb_status
	foreign key(reimb_status_id) references reimbursement_status(reimb_status_id),
constraint fk_reimb_type
	foreign key(reimb_type_id) references reimbursement_type(reimb_type_id)
);




drop schema ers cascade;

create schema ers;
